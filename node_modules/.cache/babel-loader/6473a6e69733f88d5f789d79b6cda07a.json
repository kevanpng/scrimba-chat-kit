{"ast":null,"code":"import _toConsumableArray from \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/src/App.js\";\nimport React from 'react';\nimport Chatkit from '@pusher/chatkit';\nimport MessageList from './components/MessageList';\nimport SendMessageForm from '././components/SendMessageForm';\nimport RoomList from './components/RoomList';\nimport NewRoomForm from './components/NewRoomForm';\nimport { tokenUrl, instanceLocator, userId, roomId, secretKey } from './config';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var chatManager = new Chatkit.ChatManager({\n        instanceLocator: instanceLocator,\n        key: secretKey,\n        userId: userId,\n        tokenProvider: new Chatkit.TokenProvider({\n          url: tokenUrl\n        })\n      });\n      chatManager.connect().then(function (currentUser) {\n        currentUser.subscribeToRoom({\n          roomId: roomId,\n          hooks: {\n            onNewMessage: function onNewMessage(message) {\n              console.log('message.text', message.text);\n\n              _this2.setState({\n                messages: _toConsumableArray(_this2.state.messages).concat([message])\n              });\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(RoomList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(MessageList, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(SendMessageForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(NewRoomForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/kevan/Desktop/other_github_dirs/scrimba-chatkit-react/src/App.js"],"names":["React","Chatkit","MessageList","SendMessageForm","RoomList","NewRoomForm","tokenUrl","instanceLocator","userId","roomId","secretKey","App","state","messages","chatManager","ChatManager","key","tokenProvider","TokenProvider","url","connect","then","currentUser","subscribeToRoom","hooks","onNewMessage","message","console","log","text","setState","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,SAASC,QAAT,EAAmBC,eAAnB,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,SAApD,QAAqE,UAArE;;IACMC,G;;;;;AAEF,iBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFU;AAKb;;;;wCAEmB;AAAA;;AAChB,UAAMC,WAAW,GAAG,IAAIb,OAAO,CAACc,WAAZ,CAAwB;AACxCR,QAAAA,eAAe,EAAfA,eADwC;AAExCS,QAAAA,GAAG,EAAEN,SAFmC;AAGxCF,QAAAA,MAAM,EAAEA,MAHgC;AAIxCS,QAAAA,aAAa,EAAE,IAAIhB,OAAO,CAACiB,aAAZ,CAA0B;AACrCC,UAAAA,GAAG,EAAEb;AADgC,SAA1B;AAJyB,OAAxB,CAApB;AASAQ,MAAAA,WAAW,CAACM,OAAZ,GACCC,IADD,CACM,UAAAC,WAAW,EAAI;AACjBA,QAAAA,WAAW,CAACC,eAAZ,CAA4B;AACxBd,UAAAA,MAAM,EAAEA,MADgB;AAExBe,UAAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE,sBAAAC,OAAO,EAAI;AACrBC,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAAO,CAACG,IAApC;;AACA,cAAA,MAAI,CAACC,QAAL,CAAc;AACVjB,gBAAAA,QAAQ,qBAAM,MAAI,CAACD,KAAL,CAAWC,QAAjB,UAA2Ba,OAA3B;AADE,eAAd;AAGH;AANE;AAFiB,SAA5B;AAWH,OAbD;AAcH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ;AAQH;;;;EA5Cab,KAAK,CAAC+B,S;;AA+CxB,eAAepB,GAAf","sourcesContent":["import React from 'react'\nimport Chatkit from '@pusher/chatkit'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from '././components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport NewRoomForm from './components/NewRoomForm'\n\nimport { tokenUrl, instanceLocator, userId, roomId, secretKey } from './config'\nclass App extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            messages: []\n        }\n    }\n\n    componentDidMount() {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator,\n            key: secretKey,\n            userId: userId,\n            tokenProvider: new Chatkit.TokenProvider({\n                url: tokenUrl\n            })\n        })\n\n        chatManager.connect()\n        .then(currentUser => {\n            currentUser.subscribeToRoom({\n                roomId: roomId,\n                hooks: {\n                    onNewMessage: message => {\n                        console.log('message.text', message.text)\n                        this.setState({\n                            messages: [...this.state.messages, message]\n                        })\n                    }\n                }\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <RoomList />\n                <MessageList messages={this.state.messages} />\n                <SendMessageForm />\n                <NewRoomForm />\n            </div>\n        );\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}